SHELL = /bin/bash

CXX = @CXX@
CC = @CC@
FC = @FC@

CPPFLAGS = @CPPFLAGS@ -I../include

CXXFLAGS = $(CPPFLAGS) @CXXFLAGS@ @OPENMP_CXXFLAGS@
CFLAGS = $(CPPFLAGS) @CFLAGS@ @OPENMP_CFLAGS@
FCFLAGS = $(CPPFLAGS) @FCFLAGS@ @OPENMP_FCFLAGS@

LDFLAGS = @LDFLAGS@ @OPENMP_CXXFLAGS@ -L../lib

libdir = @prefix@/lib
libversion = 2:0:0

VPATH = ./:./src

ifeq (@USING_FORTRAN@,yes)
fortran_objs = pragmatic.lo  
endif
objects = cpragmatic.lo $(fortran_objs)

LIBS = $(objects) @LIBS@

ifneq (@enable_libtool@, no)
  LIBTOOL_CXX = ../libtool --mode=compile --tag=CXX
  LIBTOOL_CC = ../libtool --mode=compile --tag=CC
  LIBTOOL_FC = ../libtool --mode=compile --tag=FC

  LIBTOOL_MKLIB = ../libtool --mode=link --tag=CXX  $(CXX) $(LDFLAGS) -o libpragmatic.la $(LIBS) -rpath $(libdir) -version-info $(libversion)
  LIBTOOL_INSTALL = ../libtool --mode=install ../install-sh libpragmatic.la $(DESTDIR)$(libdir)/libpragmatic.la
else
  LIBTOOL_MKDIR = ar -u ../lib/libpragmatic.a $(objects)
  LIBTOOL_INSTALL = ../install-sh ../lib/libpragmatic.a $(DESTDIR)$(libdir)/libpragmatic.a
endif

LIBTOOL = ../libtool


.SUFFIXES: .F90 .cpp .c .o .lo

# cancel implicit rule that tries to make .o from .mod with m2c:
%.o: %.mod

.cpp.lo:
	@$(LIBTOOL_CXX) $(CXX) $(CXXFLAGS) -c $<
.c.lo:
	@$(LIBTOOL_CC) $(CC) $(CFLAGS) -c $<
.F90.lo:
	@$(LIBTOOL_FC) $(FC) $(FCFLAGS) -c $<

default: lib

lib: $(objects)
	mkdir -p ../lib
	$(LIBTOOL_MKDIR)
ifeq (@USING_FORTRAN@,yes)
	cp *.mod ../include/
endif

install:
	$(LIBTOOL_INSTALL) 
clean:
	rm -rf *.o *.mod *.lo *.la .libs

