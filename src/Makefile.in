SHELL = /bin/bash

CXX = @CXX@
CC = @CC@
FC = @FC@

CPPFLAGS = @CPPFLAGS@ -I../include

CXXFLAGS = $(CPPFLAGS) @CXXFLAGS@ @OPENMP_CXXFLAGS@
CFLAGS = $(CPPFLAGS) @CFLAGS@ @OPENMP_CFLAGS@
FCFLAGS = $(CPPFLAGS) @FCFLAGS@ @OPENMP_FCFLAGS@

LDFLAGS = @LDFLAGS@ @OPENMP_CXXFLAGS@ -L../lib
LIBS = @LIBS@

libdir = @prefix@/lib
libversion = 2:0:0

VPATH = ./:./src

LIBTOOL_CXX = ../libtool --mode=compile --tag=CXX
LIBTOOL_CC = ../libtool --mode=compile --tag=CC
LIBTOOL_FC = ../libtool --mode=compile --tag=FC

ifeq (@USING_FORTRAN@,yes)
  objects = cpragmatic.o pragmatic.o
else
  objects = cpragmatic.o 
endif

ifneq (@enable_libtool@, no)
  ifeq (@USING_FORTRAN@,yes)
    objects_lo = cpragmatic.lo pragmatic.lo
  else
    objects_lo = cpragmatic.lo  
  endif
  
  LIBTOOL_MKLIB = ../libtool --mode=link --tag=CXX  $(CXX) $(LDFLAGS) -o libpragmatic.la $(objects_lo) $(LIBS) -rpath $(libdir) -version-info $(libversion)
  INSTALL_LIB = ../libtool --mode=install ../install-sh libpragmatic.la $(DESTDIR)$(libdir)/libpragmatic.la
else
  INSTALL_LIB =	../install-sh ../lib/libpragmatic.a $(DESTDIR)$(libdir)/libpragmatic.a
endif

.SUFFIXES: .F90 .cpp .c .o .lo

# cancel implicit rule that tries to make .o from .mod with m2c:
%.o: %.mod

.cpp.o:
	@$(CXX) $(CXXFLAGS) -c $<
.c.o:
	@$(CC) $(CFLAGS) -c $<
.F90.o:
	@$(FC) $(FCFLAGS) -c $<

.cpp.lo:
	@$(LIBTOOL_CXX) $(CXX) $(CXXFLAGS) -c $<
.c.lo:
	@$(LIBTOOL_CC) $(CC) $(CFLAGS) -c $<
.F90.lo:
	@$(LIBTOOL_FC) $(FC) $(FCFLAGS) -c $<

default: lib

lib: $(objects) $(objects_lo)
	mkdir -p ../lib
	@AR@ @ARFLAGS@ ../lib/libpragmatic.a $(objects)
	$(LIBTOOL_MKLIB)
ifeq (@USING_FORTRAN@,yes)
	cp *.mod ../include/
endif

install:
	$(INSTALL_LIB) 

clean:
	rm -rf *.o *.mod *.lo *.la .libs

